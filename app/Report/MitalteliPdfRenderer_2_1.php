<?php

/**
 * webtrees: online genealogy
 * Copyright (C) 2025 webtrees development team
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 */

declare(strict_types=1);

namespace vendor\WebtreesModules\mitalteli\ResearchTasksReportNamespace\Report;

use vendor\WebtreesModules\mitalteli\ResearchTasksReportNamespace\ResearchTasksReportModule;

use Fisharebest\Webtrees\Report\PdfRenderer;
use Fisharebest\Webtrees\Report\ReportBaseElement;
use Fisharebest\Webtrees\Report\ReportPdfCell;

use Fisharebest\Webtrees\Webtrees;

use function count;

/**
 * Class PdfRenderer
 */
class MitalteliPdfRenderer_2_1 extends PdfRenderer
{
    // Fisharebest\Webtrees\Report\PdfRenderer
    private $parent_reflection_class;

    public function getFromParentPrivateConstantWithReflection(string $attribute_name) {
        $property = $this->parent_reflection_class->getConstant($attribute_name);
        return $property; // Get the value from the parent object instance
    }

    public function __construct()
    {
        $this_reflection_class = new \ReflectionClass('\vendor\WebtreesModules\mitalteli\ResearchTasksReportNamespace\Report\MitalteliPdfRenderer_2_1');
        $this->parent_reflection_class = $this_reflection_class->getParentClass();
                
        #parent::{__FUNCTION__}();
    }    

    /**
     * PDF Setup - ReportPdf
     *
     * @return void
     */
    public function setup(): void
    {
        // Check if the report string contains the module directory path
        // if not running from this module, redirect to the standard ReportGenerate handler
        if (!str_contains($this->title, ResearchTasksReportModule::REPORT_TITLE)) {
            parent::{__FUNCTION__}(); // Call the parent method and
            return;
        }

        parent::setup();

        $this->tcpdf = new MitalteliTcpdfWrapper(
            $this->orientation,
            self::UNITS,
            [$this->page_width, $this->page_height],
            $this->getFromParentPrivateConstantWithReflection('UNICODE'),
            'UTF-8',
            $this->getFromParentPrivateConstantWithReflection('DISK_CACHE')
        );

        $this->tcpdf->setMargins($this->left_margin, $this->top_margin, $this->right_margin);
        $this->tcpdf->setHeaderMargin($this->header_margin);
        $this->tcpdf->setFooterMargin($this->footer_margin);
        $this->tcpdf->setAutoPageBreak(true, $this->bottom_margin);
        $this->tcpdf->setFontSubsetting($this->getFromParentPrivateConstantWithReflection('SUBSETTING'));
        $this->tcpdf->setCompression($this->getFromParentPrivateConstantWithReflection('COMPRESSION'));
        $this->tcpdf->setRTL($this->rtl);
        $this->tcpdf->setCreator(Webtrees::NAME . ' ' . Webtrees::VERSION);
        $this->tcpdf->setAuthor($this->rauthor);
        $this->tcpdf->setTitle($this->title);
        $this->tcpdf->setSubject($this->rsubject);
        $this->tcpdf->setKeywords($this->rkeywords);
        $this->tcpdf->setHeaderData('', 0, $this->title);
        $this->tcpdf->setHeaderFont([$this->default_font, '', $this->default_font_size]);

        if ($this->show_generated_by) {
            // The default style name for Generated by.... is 'genby'
            $element = new ReportPdfCell(0.0, 10.0, '', 'C', '', 'genby', 1, ReportBaseElement::CURRENT_POSITION, ReportBaseElement::CURRENT_POSITION, false, 0, '', '', true);
            $element->addText($this->generated_by);
            $element->setUrl(Webtrees::URL);
            $this->addElementToFooter($element);
        }
    }
}
